///
/// JPlayAgeRangeDeclarationResult.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "PlayAgeRangeDeclarationResult.hpp"

#include <optional>
#include <string>

namespace margelo::nitro::playagerangedeclaration {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "PlayAgeRangeDeclarationResult" and the the Kotlin data class "PlayAgeRangeDeclarationResult".
   */
  struct JPlayAgeRangeDeclarationResult final: public jni::JavaClass<JPlayAgeRangeDeclarationResult> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/playagerangedeclaration/PlayAgeRangeDeclarationResult;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct PlayAgeRangeDeclarationResult by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    PlayAgeRangeDeclarationResult toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldInstallId = clazz->getField<jni::JString>("installId");
      jni::local_ref<jni::JString> installId = this->getFieldValue(fieldInstallId);
      static const auto fieldUserStatus = clazz->getField<jni::JString>("userStatus");
      jni::local_ref<jni::JString> userStatus = this->getFieldValue(fieldUserStatus);
      static const auto fieldError = clazz->getField<jni::JString>("error");
      jni::local_ref<jni::JString> error = this->getFieldValue(fieldError);
      return PlayAgeRangeDeclarationResult(
        installId != nullptr ? std::make_optional(installId->toStdString()) : std::nullopt,
        userStatus != nullptr ? std::make_optional(userStatus->toStdString()) : std::nullopt,
        error != nullptr ? std::make_optional(error->toStdString()) : std::nullopt
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JPlayAgeRangeDeclarationResult::javaobject> fromCpp(const PlayAgeRangeDeclarationResult& value) {
      return newInstance(
        value.installId.has_value() ? jni::make_jstring(value.installId.value()) : nullptr,
        value.userStatus.has_value() ? jni::make_jstring(value.userStatus.value()) : nullptr,
        value.error.has_value() ? jni::make_jstring(value.error.value()) : nullptr
      );
    }
  };

} // namespace margelo::nitro::playagerangedeclaration
